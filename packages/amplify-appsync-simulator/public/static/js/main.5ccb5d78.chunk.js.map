{"version":3,"sources":["CustomArgs.js","App.js","serviceWorker.js","index.js","../node_modules/graphql-language-service-interface/dist sync /^.*$"],"names":["unwrapOutputType","outputType","unwrappedType","isWrappingType","ofType","makeDefaultArg","parentField","arg","type","name","startsWith","endsWith","getDefaultScalarArgValue","argType","kind","value","isEnumType","getValues","map","x","includes","GraphiQLExplorer","defaultValue","DEFAULT_JWT_TOKEN","fetcher","params","fetch","method","headers","Accept","Content-Type","authorization","body","JSON","stringify","then","response","text","responseBody","parse","e","DEFAULT_QUERY","App","state","schema","query","explorerIsOpen","codeExporterVisible","toggleCodeExporter","_this","setState","codeExporterIsVisible","_handleInspectOperation","cm","mousePos","parsedQuery","console","error","token","getTokenAt","start","line","ch","end","position","indexFromPos","def","definitions","find","definition","loc","log","_definition$loc","operationKind","operation","operationName","selector","concat","el","document","querySelector","scrollIntoView","_handleEditQuery","_handleToggleExplorer","_this2","this","getIntrospectionQuery","result","editor","_graphiql","getQueryEditor","setOption","Object","objectSpread","options","extraKeys","Shift-Alt-LeftClick","data","buildClientSchema","_this3","_this$state","codeExporter","react_default","a","createElement","es","hideCodeExporter","snippets","serverUrl","codeMirrorTheme","className","graphiql_explorer_dist_default","onEdit","onRunOperation","handleRunQuery","onToggleExplorer","dist_default","ref","onEditQuery","Toolbar","Button","onClick","handlePrettifyQuery","label","title","handleToggleHistory","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister",".","./","./GraphQLLanguageService","./GraphQLLanguageService.js","./GraphQLLanguageService.js.flow","./autocompleteUtils","./autocompleteUtils.js","./autocompleteUtils.js.flow","./getAutocompleteSuggestions","./getAutocompleteSuggestions.js","./getAutocompleteSuggestions.js.flow","./getDefinition","./getDefinition.js","./getDefinition.js.flow","./getDiagnostics","./getDiagnostics.js","./getDiagnostics.js.flow","./getHoverInformation","./getHoverInformation.js","./getHoverInformation.js.flow","./getOutline","./getOutline.js","./getOutline.js.flow","./index","./index.js","./index.js.flow","webpackContext","req","id","webpackContextResolve","__webpack_require__","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.5ccb5d78.chunk.js","sourcesContent":["// flow\n\nimport GraphiQLExplorer from \"graphiql-explorer\";\nimport { isEnumType, isWrappingType } from \"graphql\";\n\nimport type {\n  GraphQLField,\n  GraphQLArgument,\n  GraphQLInputField,\n  GraphQLEnumType,\n  GraphQLOutputType,\n  GraphQLScalarType,\n  ValueNode\n} from \"graphql\";\n\nfunction unwrapOutputType(outputType: GraphQLOutputType): * {\n  let unwrappedType = outputType;\n  while (isWrappingType(unwrappedType)) {\n    unwrappedType = unwrappedType.ofType;\n  }\n  return unwrappedType;\n}\n\nexport function makeDefaultArg(\n  parentField: GraphQLField<any, any>,\n  arg: GraphQLArgument | GraphQLInputField\n): boolean {\n  const unwrappedType = unwrapOutputType(parentField.type);\n  if (\n    unwrappedType.name.startsWith(\"GitHub\") &&\n    unwrappedType.name.endsWith(\"Connection\") &&\n    (arg.name === \"first\" || arg.name === \"orderBy\")\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport function getDefaultScalarArgValue(\n  parentField: GraphQLField<any, any>,\n  arg: GraphQLArgument | GraphQLInputField,\n  argType: GraphQLEnumType | GraphQLScalarType\n): ValueNode {\n  const unwrappedType = unwrapOutputType(parentField.type);\n  switch (unwrappedType.name) {\n    case \"GitHubRepository\":\n      if (arg.name === \"name\") {\n        return { kind: \"StringValue\", value: \"graphql-js\" };\n      } else if (arg.name === \"owner\") {\n        return { kind: \"StringValue\", value: \"graphql\" };\n      }\n      break;\n    case \"NpmPackage\":\n      if (arg.name === \"name\") {\n        return { kind: \"StringValue\", value: \"graphql\" };\n      }\n      break;\n    default:\n      if (\n        isEnumType(argType) &&\n        unwrappedType.name.startsWith(\"GitHub\") &&\n        unwrappedType.name.endsWith(\"Connection\")\n      ) {\n        if (\n          arg.name === \"direction\" &&\n          argType\n            .getValues()\n            .map(x => x.name)\n            .includes(\"DESC\")\n        ) {\n          return { kind: \"EnumValue\", value: \"DESC\" };\n        } else if (\n          arg.name === \"field\" &&\n          argType\n            .getValues()\n            .map(x => x.name)\n            .includes(\"CREATED_AT\")\n        ) {\n          return { kind: \"EnumValue\", value: \"CREATED_AT\" };\n        }\n      }\n      return GraphiQLExplorer.defaultValue(argType);\n  }\n  return GraphiQLExplorer.defaultValue(argType);\n}\n","// @flow\n\nimport React, { Component } from \"react\";\nimport GraphiQL from \"graphiql\";\nimport GraphiQLExplorer from \"graphiql-explorer\";\nimport { buildClientSchema, getIntrospectionQuery, parse } from \"graphql\";\nimport CodeExporter from 'graphiql-code-exporter';\nimport snippets from 'graphiql-code-exporter/lib/snippets'\n\nimport { makeDefaultArg, getDefaultScalarArgValue } from \"./CustomArgs\";\n\nimport \"graphiql/graphiql.css\";\nimport \"./App.css\";\n\nimport type { GraphQLSchema } from \"graphql\";\nconst DEFAULT_JWT_TOKEN = `eyJraWQiOiI2SnRBWkxOdFIrSENMK0Nxd2dkM2g3N09OWWFjTkV1Y1wvd0lHeWhIM3A5TT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiIyMzU3YmU3Yy0zOWUwLTQ2MWUtOGQ4Zi05YTdhMDAzYzI5NGQiLCJhdWQiOiJxNHBwdTQwNHNkaXFsY2pnMjE3NTZodmFwIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImV2ZW50X2lkIjoiMDY2ZjFjYWQtNmRhMC0xMWU4LTg1MTQtODc4NTQwZThkZjMzIiwidG9rZW5fdXNlIjoiaWQiLCJhdXRoX3RpbWUiOjE1Mjg3Mzk0NzAsImlzcyI6Imh0dHBzOlwvXC9jb2duaXRvLWlkcC51cy1lYXN0LTEuYW1hem9uYXdzLmNvbVwvdXMtZWFzdC0xXzI3V2NNTDlrOCIsImNvZ25pdG86dXNlcm5hbWUiOiJkOWFlYWFkYy1lNjc3LTRjNjUtOWQ2OS1hNGQ2ZjNhN2RmODYiLCJleHAiOjE1Mjg3NDMwNzAsImlhdCI6MTUyODczOTQ3MCwiZW1haWwiOiJ1c2VyQGV4YW1wbGUuY29tIn0.X7PSLJ27adURsyD5lTFNkBTWnhpOrgoObVhk4pyXQ7kFofA9JrNguxKg_h-2pp0VWhwrJ_HoprCLtuB9O3Ly0AZfYOhzcmD-S67a2TSyq3JgANcJIE5b8hPahQoEdojdbctfp9JkRmxnWVOTDZ8jJ_HTTStougBIVVvvp9tEPDwvDZmfUmsfQKKYTgUXN-KvSOm_wzsKb1_AJ13dbpFcCDpn2msoQ9ghC7Iwv8wtFnP4QmPUOeoSkDpMSiRzVSOQiOTG33ZuxtFyEHy5frEx_q-UW9Y5czUs1owtbC1J-QaYKUZQCVJPkHohN6xRfQo3SshzUUIZ_aoK1aqSompDIQ`\nfunction fetcher(params: Object): Object {\n  return fetch(\n    \"/graphql\",\n    {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        authorization: DEFAULT_JWT_TOKEN,\n      },\n      body: JSON.stringify(params)\n    }\n  )\n    .then(function(response) {\n      return response.text();\n    })\n    .then(function(responseBody) {\n      try {\n        return JSON.parse(responseBody);\n      } catch (e) {\n        return responseBody;\n      }\n    });\n}\n\nconst DEFAULT_QUERY = `# shift-option/alt-click on a query below to jump to it in the explorer\n# option/alt-click on a field in the explorer to select all subfields\n`;\n\ntype State = {\n  schema: ?GraphQLSchema,\n  query: string,\n  explorerIsOpen: boolean,\n  codeExporterVisible: boolean\n};\n\nclass App extends Component<{}, State> {\n  _graphiql: GraphiQL;\n  state = { schema: null, query: DEFAULT_QUERY, explorerIsOpen: true, codeExporterVisible: false };\n\n  componentDidMount() {\n    fetcher({\n      query: getIntrospectionQuery()\n    }).then(result => {\n      const editor = this._graphiql.getQueryEditor();\n      editor.setOption(\"extraKeys\", {\n        ...(editor.options.extraKeys || {}),\n        \"Shift-Alt-LeftClick\": this._handleInspectOperation\n      });\n      if(result && result.data) {\n        this.setState({ schema: buildClientSchema(result.data) });\n      }\n    });\n  }\n\n  toggleCodeExporter = () => this.setState({\n    codeExporterIsVisible: !this.state.codeExporterIsVisible\n  })\n\n\n  _handleInspectOperation = (\n    cm: any,\n    mousePos: { line: Number, ch: Number }\n  ) => {\n    const parsedQuery = parse(this.state.query || \"\");\n\n    if (!parsedQuery) {\n      console.error(\"Couldn't parse query document\");\n      return null;\n    }\n\n    var token = cm.getTokenAt(mousePos);\n    var start = { line: mousePos.line, ch: token.start };\n    var end = { line: mousePos.line, ch: token.end };\n    var relevantMousePos = {\n      start: cm.indexFromPos(start),\n      end: cm.indexFromPos(end)\n    };\n\n    var position = relevantMousePos;\n\n    var def = parsedQuery.definitions.find(definition => {\n      if (!definition.loc) {\n        console.log(\"Missing location information for definition\");\n        return false;\n      }\n\n      const { start, end } = definition.loc;\n      return start <= position.start && end >= position.end;\n    });\n\n    if (!def) {\n      console.error(\n        \"Unable to find definition corresponding to mouse position\"\n      );\n      return null;\n    }\n\n    var operationKind =\n      def.kind === \"OperationDefinition\"\n        ? def.operation\n        : def.kind === \"FragmentDefinition\"\n        ? \"fragment\"\n        : \"unknown\";\n\n    var operationName =\n      def.kind === \"OperationDefinition\" && !!def.name\n        ? def.name.value\n        : def.kind === \"FragmentDefinition\" && !!def.name\n        ? def.name.value\n        : \"unknown\";\n\n    var selector = `.graphiql-explorer-root #${operationKind}-${operationName}`;\n\n    var el = document.querySelector(selector);\n    el && el.scrollIntoView();\n  };\n\n  _handleEditQuery = (query: string): void => this.setState({ query });\n\n  _handleToggleExplorer = () => {\n    this.setState({ explorerIsOpen: !this.state.explorerIsOpen });\n  };\n\n  render() {\n    const { query, schema, codeExporterIsVisible } = this.state;\n    const codeExporter = codeExporterIsVisible ? (\n      <CodeExporter\n        hideCodeExporter={this.toggleCodeExporter}\n        snippets={snippets}\n        serverUrl=\"/graphql\"\n        query={query}\n        // Optional if you want to use a custom theme\n        codeMirrorTheme=\"neo\"\n      />\n    ) : null\n    return (\n      <div className=\"graphiql-container\">\n        <GraphiQLExplorer\n          schema={schema}\n          query={query}\n          onEdit={this._handleEditQuery}\n          onRunOperation={operationName =>\n            this._graphiql.handleRunQuery(operationName)\n          }\n          explorerIsOpen={this.state.explorerIsOpen}\n          onToggleExplorer={this._handleToggleExplorer}\n          getDefaultScalarArgValue={getDefaultScalarArgValue}\n          makeDefaultArg={makeDefaultArg}\n        />\n        <GraphiQL\n          ref={ref => (this._graphiql = ref)}\n          fetcher={fetcher}\n          schema={schema}\n          query={query}\n          onEditQuery={this._handleEditQuery}\n        >\n          <GraphiQL.Toolbar>\n            <GraphiQL.Button\n              onClick={() => this._graphiql.handlePrettifyQuery()}\n              label=\"Prettify\"\n              title=\"Prettify Query (Shift-Ctrl-P)\"\n            />\n            <GraphiQL.Button\n              onClick={() => this._graphiql.handleToggleHistory()}\n              label=\"History\"\n              title=\"Show History\"\n            />\n            <GraphiQL.Button\n              onClick={this._handleToggleExplorer}\n              label=\"Explorer\"\n              title=\"Toggle Explorer\"\n            />\n            <GraphiQL.Button\n              onClick={this.toggleCodeExporter}\n              label=\"Code Exporter\"\n              title=\"Toggle Code Exporter\"\n            />\n          </GraphiQL.Toolbar>\n        </GraphiQL>\n        {codeExporter}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\".\": 37,\n\t\"./\": 37,\n\t\"./GraphQLLanguageService\": 71,\n\t\"./GraphQLLanguageService.js\": 71,\n\t\"./GraphQLLanguageService.js.flow\": 203,\n\t\"./autocompleteUtils\": 52,\n\t\"./autocompleteUtils.js\": 52,\n\t\"./autocompleteUtils.js.flow\": 204,\n\t\"./getAutocompleteSuggestions\": 44,\n\t\"./getAutocompleteSuggestions.js\": 44,\n\t\"./getAutocompleteSuggestions.js.flow\": 205,\n\t\"./getDefinition\": 53,\n\t\"./getDefinition.js\": 53,\n\t\"./getDefinition.js.flow\": 206,\n\t\"./getDiagnostics\": 55,\n\t\"./getDiagnostics.js\": 55,\n\t\"./getDiagnostics.js.flow\": 207,\n\t\"./getHoverInformation\": 56,\n\t\"./getHoverInformation.js\": 56,\n\t\"./getHoverInformation.js.flow\": 208,\n\t\"./getOutline\": 70,\n\t\"./getOutline.js\": 70,\n\t\"./getOutline.js.flow\": 209,\n\t\"./index\": 37,\n\t\"./index.js\": 37,\n\t\"./index.js.flow\": 210\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 98;"],"sourceRoot":""}