fe07f2052323eee5379cb61076e027c6
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ModelResourceIDs = void 0;

const util_1 = require("./util");

const definition_1 = require("./definition");

class ModelResourceIDs {
  static ModelTableResourceID(typeName) {
    return `${typeName}Table`;
  }

  static ModelTableStreamArn(typeName) {
    return `${typeName}TableStreamArn`;
  }

  static ModelTableDataSourceID(typeName) {
    return `${typeName}DataSource`;
  }

  static ModelTableIAMRoleID(typeName) {
    return `${typeName}IAMRole`;
  }

  static ModelFilterInputTypeName(name) {
    const nameOverride = definition_1.DEFAULT_SCALARS[name];

    if (nameOverride) {
      return `Model${nameOverride}FilterInput`;
    }

    return `Model${name}FilterInput`;
  }

  static ModelFilterScalarInputTypeName(name, includeFilter) {
    const nameOverride = definition_1.DEFAULT_SCALARS[name];

    if (nameOverride) {
      return `Model${nameOverride}${includeFilter ? 'Filter' : ''}Input`;
    }

    return `Model${name}${includeFilter ? 'Filter' : ''}Input`;
  }

  static ModelConditionInputTypeName(name) {
    const nameOverride = definition_1.DEFAULT_SCALARS[name];

    if (nameOverride) {
      return `Model${nameOverride}ConditionInput`;
    }

    return `Model${name}ConditionInput`;
  }

  static ModelKeyConditionInputTypeName(name) {
    const nameOverride = definition_1.DEFAULT_SCALARS[name];

    if (nameOverride) {
      return `Model${nameOverride}KeyConditionInput`;
    }

    return `Model${name}KeyConditionInput`;
  }

  static ModelCompositeKeyArgumentName(keyFieldNames) {
    return util_1.toCamelCase(keyFieldNames.map(n => util_1.graphqlName(n)));
  }

  static ModelCompositeKeySeparator() {
    return '#';
  }

  static ModelCompositeAttributeName(keyFieldNames) {
    return keyFieldNames.join(ModelResourceIDs.ModelCompositeKeySeparator());
  }

  static ModelCompositeKeyConditionInputTypeName(modelName, keyName) {
    return `Model${modelName}${keyName}CompositeKeyConditionInput`;
  }

  static ModelCompositeKeyInputTypeName(modelName, keyName) {
    return `Model${modelName}${keyName}CompositeKeyInput`;
  }

  static ModelFilterListInputTypeName(name, includeFilter) {
    const nameOverride = definition_1.DEFAULT_SCALARS[name];

    if (nameOverride) {
      return `Model${nameOverride}List${includeFilter ? 'Filter' : ''}Input`;
    }

    return `Model${name}List${includeFilter ? 'Filter' : ''}Input`;
  }

  static ModelScalarFilterInputTypeName(name, includeFilter) {
    const nameOverride = definition_1.DEFAULT_SCALARS[name];

    if (nameOverride) {
      return `Model${nameOverride}${includeFilter ? 'Filter' : ''}Input`;
    }

    return `Model${name}${includeFilter ? 'Filter' : ''}Input`;
  }

  static ModelConnectionTypeName(typeName) {
    return `Model${typeName}Connection`;
  }

  static ModelDeleteInputObjectName(typeName) {
    return util_1.graphqlName('Delete' + util_1.toUpper(typeName) + 'Input');
  }

  static ModelUpdateInputObjectName(typeName) {
    return util_1.graphqlName('Update' + util_1.toUpper(typeName) + 'Input');
  }

  static ModelCreateInputObjectName(typeName) {
    return util_1.graphqlName(`Create` + util_1.toUpper(typeName) + 'Input');
  }

  static ModelOnCreateSubscriptionName(typeName) {
    return util_1.graphqlName(`onCreate` + util_1.toUpper(typeName));
  }

  static ModelOnUpdateSubscriptionName(typeName) {
    return util_1.graphqlName(`onUpdate` + util_1.toUpper(typeName));
  }

  static ModelOnDeleteSubscriptionName(typeName) {
    return util_1.graphqlName(`onDelete` + util_1.toUpper(typeName));
  }

  static ModelAttributeTypesName() {
    return `ModelAttributeTypes`;
  }

  static ModelSizeInputTypeName() {
    return `ModelSizeInput`;
  }

  static NonModelInputObjectName(typeName) {
    return util_1.graphqlName(util_1.toUpper(typeName) + 'Input');
  }

  static UrlParamsInputObjectName(typeName, fieldName) {
    return util_1.graphqlName(util_1.toUpper(typeName) + util_1.toUpper(fieldName) + 'ParamsInput');
  }

  static HttpQueryInputObjectName(typeName, fieldName) {
    return util_1.graphqlName(util_1.toUpper(typeName) + util_1.toUpper(fieldName) + 'QueryInput');
  }

  static HttpBodyInputObjectName(typeName, fieldName) {
    return util_1.graphqlName(util_1.toUpper(typeName) + util_1.toUpper(fieldName) + 'BodyInput');
  }

}

exports.ModelResourceIDs = ModelResourceIDs;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Nb2RlbFJlc291cmNlSURzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxNQUFBLE1BQUEsR0FBQSxPQUFBLENBQUEsUUFBQSxDQUFBOztBQUNBLE1BQUEsWUFBQSxHQUFBLE9BQUEsQ0FBQSxjQUFBLENBQUE7O0FBRUEsTUFBYSxnQkFBYixDQUE2QjtBQUMzQixTQUFPLG9CQUFQLENBQTRCLFFBQTVCLEVBQTRDO0FBQzFDLFdBQU8sR0FBRyxRQUFRLE9BQWxCO0FBQ0Q7O0FBQ0QsU0FBTyxtQkFBUCxDQUEyQixRQUEzQixFQUEyQztBQUN6QyxXQUFPLEdBQUcsUUFBUSxnQkFBbEI7QUFDRDs7QUFDRCxTQUFPLHNCQUFQLENBQThCLFFBQTlCLEVBQThDO0FBQzVDLFdBQU8sR0FBRyxRQUFRLFlBQWxCO0FBQ0Q7O0FBQ0QsU0FBTyxtQkFBUCxDQUEyQixRQUEzQixFQUEyQztBQUN6QyxXQUFPLEdBQUcsUUFBUSxTQUFsQjtBQUNEOztBQUNELFNBQU8sd0JBQVAsQ0FBZ0MsSUFBaEMsRUFBNEM7QUFDMUMsVUFBTSxZQUFZLEdBQUcsWUFBQSxDQUFBLGVBQUEsQ0FBZ0IsSUFBaEIsQ0FBckI7O0FBQ0EsUUFBSSxZQUFKLEVBQWtCO0FBQ2hCLGFBQU8sUUFBUSxZQUFZLGFBQTNCO0FBQ0Q7O0FBQ0QsV0FBTyxRQUFRLElBQUksYUFBbkI7QUFDRDs7QUFDRCxTQUFPLDhCQUFQLENBQXNDLElBQXRDLEVBQW9ELGFBQXBELEVBQTBFO0FBQ3hFLFVBQU0sWUFBWSxHQUFHLFlBQUEsQ0FBQSxlQUFBLENBQWdCLElBQWhCLENBQXJCOztBQUNBLFFBQUksWUFBSixFQUFrQjtBQUNoQixhQUFPLFFBQVEsWUFBWSxHQUFHLGFBQWEsR0FBRyxRQUFILEdBQWMsRUFBRSxPQUEzRDtBQUNEOztBQUNELFdBQU8sUUFBUSxJQUFJLEdBQUcsYUFBYSxHQUFHLFFBQUgsR0FBYyxFQUFFLE9BQW5EO0FBQ0Q7O0FBQ0QsU0FBTywyQkFBUCxDQUFt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