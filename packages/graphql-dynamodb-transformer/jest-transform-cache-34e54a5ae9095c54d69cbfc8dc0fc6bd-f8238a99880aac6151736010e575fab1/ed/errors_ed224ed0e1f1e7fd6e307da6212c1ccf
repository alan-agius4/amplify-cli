b80e49bb5aae20d0c634166d117b92c0
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UnknownDirectiveError = exports.InvalidDirectiveError = exports.InvalidMigrationError = exports.TransformerContractError = exports.SchemaValidationError = exports.InvalidTransformerError = void 0;

class InvalidTransformerError extends Error {
  constructor(message) {
    super(message);
    Object.setPrototypeOf(this, InvalidTransformerError.prototype);
    this.name = 'InvalidTransformerError';

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, InvalidTransformerError);
    }
  }

}

exports.InvalidTransformerError = InvalidTransformerError;

class SchemaValidationError extends Error {
  constructor(errors) {
    super(`Schema Errors:\n\n${errors.join('\n')}`);
    Object.setPrototypeOf(this, SchemaValidationError.prototype);
    this.name = 'SchemaValidationError';

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, SchemaValidationError);
    }
  }

}

exports.SchemaValidationError = SchemaValidationError;

class TransformerContractError extends Error {
  constructor(message) {
    super(message);
    Object.setPrototypeOf(this, TransformerContractError.prototype);
    this.name = 'TransformerContractError';

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, TransformerContractError);
    }
  }

}

exports.TransformerContractError = TransformerContractError;

class InvalidMigrationError extends Error {
  constructor(message, cause, fix) {
    super(message);
    Object.setPrototypeOf(this, InvalidMigrationError.prototype);
    this.name = 'InvalidMigrationError';
    this.fix = fix;
    this.cause = cause;
  }

}

exports.InvalidMigrationError = InvalidMigrationError;

InvalidMigrationError.prototype.toString = function () {
  return `${this.message}\nCause: ${this.cause}\nHow to fix: ${this.fix}`;
};

class InvalidDirectiveError extends Error {
  constructor(message) {
    super(message);
    Object.setPrototypeOf(this, InvalidDirectiveError.prototype);
    this.name = 'InvalidDirectiveError';

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, InvalidDirectiveError);
    }
  }

}

exports.InvalidDirectiveError = InvalidDirectiveError;

class UnknownDirectiveError extends Error {
  constructor(message) {
    super(message);
    Object.setPrototypeOf(this, UnknownDirectiveError.prototype);
    this.name = 'UnknownDirectiveError';

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, UnknownDirectiveError);
    }
  }

}

exports.UnknownDirectiveError = UnknownDirectiveError;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9lcnJvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBLE1BQWEsdUJBQWIsU0FBNkMsS0FBN0MsQ0FBa0Q7QUFDaEQsRUFBQSxXQUFBLENBQVksT0FBWixFQUEyQjtBQUN6QixVQUFNLE9BQU47QUFDQSxJQUFBLE1BQU0sQ0FBQyxjQUFQLENBQXNCLElBQXRCLEVBQTRCLHVCQUF1QixDQUFDLFNBQXBEO0FBQ0EsU0FBSyxJQUFMLEdBQVkseUJBQVo7O0FBQ0EsUUFBSyxLQUFhLENBQUMsaUJBQW5CLEVBQXNDO0FBQ25DLE1BQUEsS0FBYSxDQUFDLGlCQUFkLENBQWdDLElBQWhDLEVBQXNDLHVCQUF0QztBQUNGO0FBQ0Y7O0FBUitDOztBQUFsRCxPQUFBLENBQUEsdUJBQUEsR0FBQSx1QkFBQTs7QUFXQSxNQUFhLHFCQUFiLFNBQTJDLEtBQTNDLENBQWdEO0FBQzlDLEVBQUEsV0FBQSxDQUFZLE1BQVosRUFBNEM7QUFDMUMsVUFBTSxxQkFBcUIsTUFBTSxDQUFDLElBQVAsQ0FBWSxJQUFaLENBQWlCLEVBQTVDO0FBQ0EsSUFBQSxNQUFNLENBQUMsY0FBUCxDQUFzQixJQUF0QixFQUE0QixxQkFBcUIsQ0FBQyxTQUFsRDtBQUNBLFNBQUssSUFBTCxHQUFZLHVCQUFaOztBQUNBLFFBQUssS0FBYSxDQUFDLGlCQUFuQixFQUFzQztBQUNuQyxNQUFBLEtBQWEsQ0FBQyxpQkFBZCxDQUFnQyxJQUFoQyxFQUFzQyxxQkFBdEM7QUFDRjtBQUNGOztBQVI2Qzs7QUFBaEQsT0FBQSxDQUFBLHFCQUFBLEdBQUEscUJBQUE7O0FBbUJBLE1BQWEsd0JBQWIsU0FBOEMsS0FBOUMsQ0FBbUQ7QUFDakQsRUFBQSxXQUFBLENBQVksT0FBWixFQUEyQjtBQUN6QixVQUFNLE9BQU47QUFDQSxJQUFBLE1BQU0sQ0FBQyxjQUFQLENBQXNCLElBQXRCLEVBQTRCLHdCQUF3QixDQUFDLFNBQXJEO0FBQ0EsU0FBSyxJQUFMLEdBQVksMEJBQVo7O0FBQ0EsUUFBSyxLQUFhLENBQUMsaUJBQW5CLEVBQXNDO0FBQ25DLE1BQUEsS0FBYSxDQUFDLGlCQUFkLENBQWdDLElBQWhDLEVBQXNDLHdCQUF0QztBQUNGO0FBQ0Y7O0FBUmdEOztBQUFuRCxPQUFBLENBQUEsd0JBQUEsR0FBQSx3QkFBQTs7QUFjQSxNQUFhLHFCQUFiLFNBQTJDLEtBQTNDLENBQWdEO0FBRzlDLEVBQUEsV0FBQSxDQUFZLE9BQVosRUFBNkIsS0FBN0IsRUFBNEMsR0FBNUMsRUFBdUQ7QUFDckQsVUFBTSxPQUFOO0FBQ0EsSUFBQSxNQUFNLENBQUMsY0FBUCxDQUFzQixJQUF0QixFQUE0QixxQkFBcUIsQ0FBQyxTQUFsRDtBQUNBLFNBQUssSUFBTCxHQUFZLHVCQUFaO0FBQ0EsU0FBSyxHQUFMLEdBQVcsR0FBWDtBQUNBLFNBQUssS0FBTCxHQUFhLEtBQWI7QUFDRDs7QUFUNkM7O0FBQWhELE9BQUEsQ0FBQSxxQkFBQSxHQUFBLHFCQUFBOztBQVdBLHFCQUFxQixDQUFDLFNBQXRCLENBQWdDLFFBQWhDLEdBQTJDLFlBQUE7QUFDekMsU0FBTyxHQUFHLEtBQUssT0FBTyxZQUFZLEtBQUssS0FBSyxpQkFBaUIsS0FBSyxHQUFHLEVBQXJFO0FBQ0QsQ0FGRDs7QUFJQSxNQUFhLHFCQUFiLFNBQTJDLEtBQTNDLENBQWdEO0FBQzlDLEVBQUEsV0FBQSxDQUFZLE9BQVosRUFBMkI7QUFDekIsVUFBTSxPQUFOO0FBQ0EsSUFBQSxNQUFNLENBQUMsY0FBUCxDQUFzQixJQUF0QixFQUE0QixxQkFBcUIsQ0FBQyxTQUFsRDtBQUNBLFNBQUssSUFBTCxHQUFZLHVCQUFaOztBQUNBLFFBQUssS0FBYSxDQUFDLGlCQUFuQixFQUFzQztBQUNuQyxNQUFBLEtBQWEsQ0FBQyxpQkFBZCxDQUFnQyxJQUFoQyxFQUFzQyxxQkFBdEM7QUFDRjtBQUNGOztBQVI2Qzs7QUFBaEQsT0FBQSxDQUFBLHFCQUFBLEdBQUEscUJBQUE7O0FBV0EsTUFBYSxxQkFBYixTQUEyQyxLQUEzQyxDQUFnRDtBQUM5QyxFQUFBLFdBQUEsQ0FBWSxPQUFaLEVBQTJCO0FBQ3pCLFVBQU0sT0FBTjtBQUNBLElBQUEsTUFBTSxDQUFDLGNBQVAsQ0FBc0IsSUFBdEIsRUFBNEIscUJBQXFCLENBQUMsU0FBbEQ7QUFDQSxTQUFLLElBQUwsR0FBWSx1QkFBWjs7QUFDQSxRQUFLLEtBQWEsQ0FBQyxpQkFBbkIsRUFBc0M7QUFDbkMsTUFBQSxLQUFhLENBQUMsaUJBQWQsQ0FBZ0MsSUFBaEMsRUFBc0MscUJBQXRDO0FBQ0Y7QUFDRjs7QUFSNkM7O0FBQWhELE9BQUEsQ0FBQSxxQkFBQSxHQUFBLHFCQUFBIiwic291cmNlUm9vdCI6IiJ9