{"version":3,"sources":["/Users/yathiraj/Documents/work/amplify-cli/packages/graphql-dynamodb-transformer/src/ModelDirectiveArgs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDE;;;;;;;;;;;;;;;;;AAhDF,MAAA,0BAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;AAoCA,SAAgB,qBAAhB,CAAsC,SAAtC,EAA8D;AAAA;AAAA;AAAA;AAC5D,SAAO,qBAAqB,CAAC,SAAD,EAAY,WAAZ,EAAyB,WAAzB,CAA5B;AACD;;;;AAFD,OAAA,CAAA,qBAAA,GAAA,qBAAA;;AAIA,SAAgB,qBAAhB,CAAsC,SAAtC,EAA8D;AAAA;AAAA;AAAA;AAC5D,SAAO,qBAAqB,CAAC,SAAD,EAAY,WAAZ,EAAyB,WAAzB,CAA5B;AACD;;;;AAFD,OAAA,CAAA,qBAAA,GAAA,qBAAA;;AAIA,SAAgB,qBAAhB,CAAsC,SAAtC,EAAgE,SAAhE,EAAmF,iBAAnF,EAA4G;AAAA;AAAA;AAC1G,QAAM,kBAAkB;AAAA;AAAA,4BAAuB,0BAAA,CAAA,qBAAA,CAAsB,SAAtB,CAAvB,CAAxB;AACA,QAAM,SAAS;AAAA;AAAA,4BAAG,kBAAkB,CAAC,UAAtB,CAAf;AAEA;;;;;;AAJ0G;AAAA;;AAS1G,MAAI,SAAS,KAAK,IAAlB,EAAwB;AAAA;AAAA;AAAA;AAAA,WAAO,IAAP;AAAY,GAApC;AAAA;AAAA;AAAA;AAAA;;AAT0G;;AAU1G;AAAI;AAAA,+BAAA,SAAS;AAAA;AAAA,+BAAI,SAAS,CAAC,SAAD,CAAT,KAAyB,SAA7B,CAAb,EAAqD;AAAA;AAAA;AAAA;AACnD,WAAO,SAAS,CAAC,SAAD,CAAhB;AACD,GAFD;AAAA;AAAA;AAAA;AAAA;;AAV0G;AAa1G,SAAO,iBAAP;AACD;;;;AAdD,OAAA,CAAA,qBAAA,GAAA,qBAAA","sourcesContent":["import { getDirectiveArguments } from 'graphql-transformer-core';\nimport { DirectiveNode } from 'graphql';\n\nexport interface QueryNameMap {\n  get?: string;\n  list?: string;\n  query?: string;\n}\n\nexport interface MutationNameMap {\n  create?: string;\n  update?: string;\n  delete?: string;\n}\n\nexport type ModelSubscriptionLevel = 'off' | 'public' | 'on';\n\nexport interface SubscriptionNameMap {\n  onCreate?: string[];\n  onUpdate?: string[];\n  onDelete?: string[];\n  level?: ModelSubscriptionLevel;\n}\n\nexport interface ModelDirectiveTimestampConfiguration {\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface ModelDirectiveArgs {\n  queries?: QueryNameMap;\n  mutations?: MutationNameMap;\n  subscriptions?: SubscriptionNameMap;\n  timestamps?: ModelDirectiveTimestampConfiguration;\n}\n\nexport function getCreatedAtFieldName(directive: DirectiveNode): string | undefined {\n  return getTimestampFieldName(directive, 'createdAt', 'createdAt');\n}\n\nexport function getUpdatedAtFieldName(directive: DirectiveNode): string | undefined {\n  return getTimestampFieldName(directive, 'updatedAt', 'updatedAt');\n}\n\nexport function getTimestampFieldName(directive: DirectiveNode, fieldName: string, defaultFiledValue: string): string | undefined {\n  const directiveArguments: ModelDirectiveArgs = getDirectiveArguments(directive);\n  const timestamp = directiveArguments.timestamps;\n\n  /* When explicitly set to null, note that the check here is strict equality to null and not undefined\n   * type Post @model(timestamps:null) {\n        id: ID!\n   }\n   */\n  if (timestamp === null) return null;\n  if (timestamp && timestamp[fieldName] !== undefined) {\n    return timestamp[fieldName];\n  }\n  return defaultFiledValue;\n}\n"]}